---
title: "2025 Seattle general election ballot return statistics"
---
```{r}
#| label: prep
if (requireNamespace("renv", quietly = TRUE)) {
  # This finds the renv project root, even if the .qmd is in a subdirectory
  root <- renv::activate(project = rprojroot::find_root(rprojroot::has_file("renv.lock")))
  # Explicitly load the environment
  renv::load(project = root)
}

library(here)
library(dplyr)
library(ggplot2)
library(sf)

i_am('website/index.qmd')

load(here::here('cache/shared_objects.RData'))
```

Map of absolute turnout and turnout relative to projected turnout through `r today`. 

```{r}
#| label: turnout-map
theme_set(theme_bw())

obs_turnout <- ggplot(precinct_returns, aes(text = paste('precinct:', name, 
                                                         '\n% wilson primary:', round(pct_wilson, 3),
                                                         '\ncurrent turnout:', round(obs_turnout, 3)))) +
  geom_sf(aes(fill = obs_turnout)) +
  viridis::scale_fill_viridis(option = 'mako', 
                              labels = scales::percent_format(accuracy = 0.1)) +
  labs(fill = 'Turnout') +
  theme(legend.position = 'top')

pct_of_expected <- ggplot(precinct_returns) +
  geom_sf(aes(fill = pct_of_expected)) +
  viridis::scale_fill_viridis(option = 'mako', 
                              labels = scales::percent_format(accuracy = 0.1)) +
  labs(fill = '% exp. turnout') +
  theme(legend.position = 'top')

pct_of_primary <- ggplot(precinct_returns) +
  geom_sf(aes(fill = pct_of_primary)) +
  viridis::scale_fill_viridis(option = 'mako', 
                              labels = scales::percent_format(accuracy = 0.1)) +
  labs(fill = '% of prim. turnout') +
  theme(legend.position = 'top')

plotly::ggplotly(obs_turnout, tooltip = 'text')

cowplot::plot_grid(
  pct_of_expected,
  pct_of_primary,
  align = 'v',
  nrow = 1
)
```

## Top ten precincts with higher than expected turnout:
```{r}
precinct_returns |>
  as.data.frame() |>
  as_tibble() |>
  arrange(desc(pct_of_expected)) |>
  select(
    Precinct = name,
    Turnout = obs_turnout,
    `% of expected turnout` = pct_of_expected,
    `% Wilson in primary` = pct_wilson
  ) |>
  slice(1:10) |>
  knitr::kable(digits = 2) |>
  kableExtra::kable_styling(full_width = FALSE)
```

## Top ten precincts with lower than expected turnout:
```{r}
precinct_returns |>
  as.data.frame() |>
  as_tibble() |>
  arrange(pct_of_expected) |>
  select(
    Precinct = name,
    Turnout = obs_turnout,
    `% of expected turnout` = pct_of_expected,
    `% Wilson in primary` = pct_wilson
  ) |>
  slice(1:10) |>
  knitr::kable(digits = 2) |>
  kableExtra::kable_styling(full_width = FALSE)
```

## Explore return data yourself!

```{r}
#| label: download-button

precinct_returns |>
  as.data.frame() |>
  select(
    precinct = name,
    precinct_code,
    obs_turnout,
    exp_turnout,
    primary_turnout,
    pct_of_expected,
    pct_of_primary,
    n_reg_voters,
    pct_wilson_primary = pct_wilson
  ) |>
  downloadthis::download_this(
    output_name = paste0('returns_', today),
    output_extension = '.csv',
    button_label = 'Download precinct return data as csv',
    button_type = 'primary',
    has_icon = TRUE,
    icon = 'fa fa-save'
  )

```
## Other options

Precinct-level turnout can be examined relative to projected turnout, primary turnout, and many demographic characteristics. Demographic characteristics include average age, racial makeup, educational attainment, dominant commute mode, owner vs renter occupied, average income, average home values, and dominant languages. 

Voter-level data (i.e., whether an individual ballot has been returned) can be examined relative to projected turnout likelihood, recent voting history (e.g., primary), age, and gender.
